//Bismillahirrahmanirrahim
package com.mycompany.heap.based_collaborative_filtering;

import java.util.Random;

import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JList;
import com.formdev.flatlaf.intellijthemes.FlatArcDarkOrangeIJTheme;

public class Ui extends javax.swing.JFrame {
    ZeroList<ZeroList<Integer>> tar_us_lst = new ZeroList<>();
    ZeroList<ZeroList<Integer>> main_us_lst = new ZeroList<>();
    ZeroList<ZeroList<String>> movie_lst = new ZeroList<>();

    ZeroList<ZeroList<String>> film_lst_combo = new ZeroList<>();

    public Ui() {
        initComponents();
        csvRead<Integer> csvInt = new csvRead<>();
        csvRead<String> csvString = new csvRead<>();

        csvInt.readFileInt("./data/target_user.csv", tar_us_lst);
        csvInt.readFileInt("./data/main_data.csv", main_us_lst);

        csvString.readFile("./data/movies.csv", movie_lst);
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        csvInt.insert(tar_us_lst, 0, model);
        JCB_User_Select.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        JPN_TargetUser_Selected = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        JCB_User_Select = new javax.swing.JComboBox<>();
        JL_X = new javax.swing.JLabel();
        JL_K = new javax.swing.JLabel();
        JB_Get_Selected_Recommendation = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        JLS_Selected_Result = new javax.swing.JList<>();
        JSP_X_Selected_Value = new javax.swing.JSpinner();
        JSP_K_Selected_Value = new javax.swing.JSpinner();
        JPN_TargetUser_Insert = new javax.swing.JPanel();
        JCB_First_Movie = new javax.swing.JComboBox<>();
        JCB_Second_Movie = new javax.swing.JComboBox<>();
        JCB_Third_Movie = new javax.swing.JComboBox<>();
        JCB_Fourth_Movie = new javax.swing.JComboBox<>();
        JCB_Fifth_Movie = new javax.swing.JComboBox<>();
        JL_X1 = new javax.swing.JLabel();
        JL_K1 = new javax.swing.JLabel();
        JB_Get_Insert_Recommendation = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        JLS_Insert_Result = new javax.swing.JList<>();
        JS_1_MOVIE_VAL = new javax.swing.JSpinner();
        JS_2_MOVIE_VAL = new javax.swing.JSpinner();
        JS_3_MOVIE_VAL = new javax.swing.JSpinner();
        JS_4_MOVIE_VAL = new javax.swing.JSpinner();
        JS_5_MOVIE_VAL = new javax.swing.JSpinner();
        JSP_X_Insert_Value = new javax.swing.JSpinner();
        JSP_K_Insert_Value = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTabbedPane1MousePressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Target User:");

        JL_X.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        JL_X.setText("User count:");

        JL_K.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        JL_K.setText("Film count:");

        JB_Get_Selected_Recommendation.setText("Get Recommendations");
        JB_Get_Selected_Recommendation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_Get_Selected_RecommendationMouseClicked(evt);
            }
        });

        JLS_Selected_Result.setBorder(null);
        JLS_Selected_Result.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        JLS_Selected_Result.setFixedCellHeight(23);
        JLS_Selected_Result.setPreferredSize(new java.awt.Dimension(10, 20));
        jScrollPane3.setViewportView(JLS_Selected_Result);

        JSP_X_Selected_Value.setModel(new javax.swing.SpinnerNumberModel(5, 1, null, 1));

        JSP_K_Selected_Value.setModel(new javax.swing.SpinnerNumberModel(3, 1, null, 1));

        javax.swing.GroupLayout JPN_TargetUser_SelectedLayout = new javax.swing.GroupLayout(JPN_TargetUser_Selected);
        JPN_TargetUser_Selected.setLayout(JPN_TargetUser_SelectedLayout);
        JPN_TargetUser_SelectedLayout.setHorizontalGroup(
            JPN_TargetUser_SelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPN_TargetUser_SelectedLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(JPN_TargetUser_SelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPN_TargetUser_SelectedLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(6, 6, 6)
                        .addComponent(JCB_User_Select, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPN_TargetUser_SelectedLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(JL_X, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(JSP_X_Selected_Value, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPN_TargetUser_SelectedLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(JPN_TargetUser_SelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JPN_TargetUser_SelectedLayout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(JSP_K_Selected_Value, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(JL_K, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(JPN_TargetUser_SelectedLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(JB_Get_Selected_Recommendation, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        JPN_TargetUser_SelectedLayout.setVerticalGroup(
            JPN_TargetUser_SelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPN_TargetUser_SelectedLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(JPN_TargetUser_SelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPN_TargetUser_SelectedLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1))
                    .addComponent(JCB_User_Select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(JPN_TargetUser_SelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JL_X)
                    .addComponent(JSP_X_Selected_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(JPN_TargetUser_SelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JSP_K_Selected_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JL_K))
                .addGap(57, 57, 57)
                .addComponent(JB_Get_Selected_Recommendation))
            .addGroup(JPN_TargetUser_SelectedLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Selected Part", JPN_TargetUser_Selected);

        JL_X1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        JL_X1.setText("User count:");

        JL_K1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        JL_K1.setText("Film count:");

        JB_Get_Insert_Recommendation.setText("Get Recommendations");
        JB_Get_Insert_Recommendation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_Get_Insert_RecommendationMouseClicked(evt);
            }
        });

        JLS_Insert_Result.setFixedCellHeight(23);
        jScrollPane4.setViewportView(JLS_Insert_Result);

        JS_1_MOVIE_VAL.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        JS_2_MOVIE_VAL.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        JS_3_MOVIE_VAL.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        JS_4_MOVIE_VAL.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        JS_5_MOVIE_VAL.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        JSP_X_Insert_Value.setModel(new javax.swing.SpinnerNumberModel(5, 1, null, 1));

        JSP_K_Insert_Value.setModel(new javax.swing.SpinnerNumberModel(3, 1, null, 1));

        javax.swing.GroupLayout JPN_TargetUser_InsertLayout = new javax.swing.GroupLayout(JPN_TargetUser_Insert);
        JPN_TargetUser_Insert.setLayout(JPN_TargetUser_InsertLayout);
        JPN_TargetUser_InsertLayout.setHorizontalGroup(
            JPN_TargetUser_InsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPN_TargetUser_InsertLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(JPN_TargetUser_InsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPN_TargetUser_InsertLayout.createSequentialGroup()
                        .addComponent(JCB_First_Movie, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(JS_1_MOVIE_VAL, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPN_TargetUser_InsertLayout.createSequentialGroup()
                        .addComponent(JCB_Second_Movie, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(JS_2_MOVIE_VAL, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPN_TargetUser_InsertLayout.createSequentialGroup()
                        .addComponent(JCB_Third_Movie, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(JS_3_MOVIE_VAL, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPN_TargetUser_InsertLayout.createSequentialGroup()
                        .addComponent(JCB_Fourth_Movie, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(JS_4_MOVIE_VAL, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPN_TargetUser_InsertLayout.createSequentialGroup()
                        .addComponent(JCB_Fifth_Movie, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(JS_5_MOVIE_VAL, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPN_TargetUser_InsertLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(JL_X1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(JSP_X_Insert_Value, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPN_TargetUser_InsertLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(JL_K1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addComponent(JSP_K_Insert_Value, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPN_TargetUser_InsertLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(JB_Get_Insert_Recommendation, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        JPN_TargetUser_InsertLayout.setVerticalGroup(
            JPN_TargetUser_InsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPN_TargetUser_InsertLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(JPN_TargetUser_InsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPN_TargetUser_InsertLayout.createSequentialGroup()
                        .addGroup(JPN_TargetUser_InsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JCB_First_Movie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JS_1_MOVIE_VAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(JPN_TargetUser_InsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JCB_Second_Movie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JS_2_MOVIE_VAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(JPN_TargetUser_InsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JCB_Third_Movie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JS_3_MOVIE_VAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(JPN_TargetUser_InsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JCB_Fourth_Movie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JS_4_MOVIE_VAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(JPN_TargetUser_InsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JCB_Fifth_Movie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JS_5_MOVIE_VAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(JPN_TargetUser_InsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JPN_TargetUser_InsertLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(JL_X1))
                            .addComponent(JSP_X_Insert_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(JPN_TargetUser_InsertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JPN_TargetUser_InsertLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(JL_K1))
                            .addComponent(JSP_K_Insert_Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(JB_Get_Insert_Recommendation))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("Insert Part", JPN_TargetUser_Insert);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Main_Part");
        jTabbedPane1.getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private double cosSim(Node<Integer> tar, Node<Integer> main) {
        CosSimilarity cs = new CosSimilarity();
        return cs.calculateCosSim(tar.next, main.next);

    }

    // ! kullanıcı ile film getirme
    private void JB_Get_Selected_RecommendationMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_JB_Get_Selected_RecommendationMouseClicked
        MaxHeap2<Distance> user_reco = new MaxHeap2<>(Integer.parseInt(JSP_X_Selected_Value.getValue().toString()));
        Node<ZeroList<Integer>> tmp_main = main_us_lst.root;
        int sel_index = JCB_User_Select.getSelectedIndex();
        Node<ZeroList<Integer>> tmp_tar = tar_us_lst.root;
        for (int i = 0; i < sel_index; i++) {
            tmp_tar = tmp_tar.next;
        }
        while (tmp_main != null) {
            user_reco.insert(new Distance(tmp_main.data, cosSim(tmp_tar.data.root, tmp_main.data.root)));
            tmp_main = tmp_main.next;
        }
        user_reco.print();
        wriet_to_list(fillFilm(user_reco, Integer.parseInt(JSP_K_Selected_Value.getValue().toString())),
                JLS_Selected_Result);
    }// GEN-LAST:event_JB_Get_Selected_RecommendationMouseClicked

    // ! yıldız⭐ ile film getirme
    private void JB_Get_Insert_RecommendationMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_JB_Get_Insert_RecommendationMouseClicked
        Node<ZeroList<String>> m_index = film_lst_combo.root;
        ZeroList<Integer> user_vector = new ZeroList<Integer>();
        MaxHeap2<Distance> user_reco = new MaxHeap2<>(Integer.parseInt(JSP_X_Insert_Value.getValue().toString()));
        Node<ZeroList<Integer>> tmp_main = main_us_lst.root;

        int[] sellected_film_start = { Integer.parseInt(JS_1_MOVIE_VAL.getValue().toString()),
                Integer.parseInt(JS_2_MOVIE_VAL.getValue().toString()),
                Integer.parseInt(JS_3_MOVIE_VAL.getValue().toString()),
                Integer.parseInt(JS_4_MOVIE_VAL.getValue().toString()),
                Integer.parseInt(JS_5_MOVIE_VAL.getValue().toString()) };
        int[] sellected_film_index = { JCB_First_Movie.getSelectedIndex(),
                JCB_Second_Movie.getSelectedIndex(),
                JCB_Third_Movie.getSelectedIndex(),
                JCB_Fourth_Movie.getSelectedIndex(),
                JCB_Fifth_Movie.getSelectedIndex() };

        for (int i = 0; i < 5; i++) {
            Node<String> flm_nod = m_index.data.root;
            for (int j = 0; j < sellected_film_index[i]; j++) {
                flm_nod = flm_nod.next;
            }
            user_vector.insertFilm(sellected_film_start[i], flm_nod.film_index); // ⭐⭐⭐⭐⭐
            m_index = m_index.next;
        }

        while (tmp_main != null) {
            user_reco.insert(new Distance(tmp_main.data, cosSim(user_vector.root, tmp_main.data.root)));
            tmp_main = tmp_main.next;
        }
        wriet_to_list(fillFilm(user_reco, Integer.parseInt(JSP_K_Insert_Value.getValue().toString())),
                JLS_Insert_Result);
    }// GEN-LAST:event_JB_Get_Insert_RecommendationMouseClicked

    // ! panel değiştirince filmileri doldur
    private void jTabbedPane1MousePressed(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jTabbedPane1MousePressed
        Random r = new Random();
        // int ran = 0;
        int rr;
        Node<ZeroList<String>> mv_lst = movie_lst.root;
        ZeroList<String> films;
        JComboBox[] vcm_arr = {
                JCB_First_Movie,
                JCB_Second_Movie,
                JCB_Third_Movie,
                JCB_Fourth_Movie,
                JCB_Fifth_Movie
        };

        for (int k = 0; k < 5; k++) {
            films = new ZeroList<>();
            for (int i = 0; i < 5; i++) {
                rr = r.nextInt(240);
                for (int j = 0; j < rr; j++) {
                    mv_lst = mv_lst.next;
                    // ran++;
                }
                Node<String> t = films.insert(mv_lst.data.root.next.data);
                t.film_index = Integer.parseInt(mv_lst.data.root.data);
                // ran += r.nextInt(20);
            }
            film_lst_combo.insert(films);
        }
        // System.out.println(ran);
        Node<ZeroList<String>> t = film_lst_combo.root;
        for (int i = 0; i < vcm_arr.length; i++) {
            add_movie_in_combobox(t.data, vcm_arr[i]);
            t = t.next;
        }
    }// GEN-LAST:event_jTabbedPane1MousePressed

    private void add_movie_in_combobox(ZeroList<String> movies, JComboBox jcb) {
        Node<String> temp = movies.root;
        while (temp != null) {
            jcb.addItem(temp.data);
            temp = temp.next;
        }
    }



    // ! filmleri lsiteye ekliyor
    private void wriet_to_list(ZeroList<Distance> zl, JList jls) {
        DefaultListModel<String> dlm = new DefaultListModel<>();
        Node<Distance> film_data_node = zl.root; // ? index distance user_id
        Node<ZeroList<String>> m_node; //? filmeri isim olarak tutyor


        while(film_data_node!=null){
            m_node = movie_lst.root;
            while(m_node!=null){
                if(film_data_node.data.d_index==Integer.parseInt(m_node.data.root.data)){
                    dlm.addElement("n:" + m_node.data.root.next.data+" u: "+film_data_node.data.user_id+" s⭐: "+film_data_node.data.distance);
                    break;
                }
                m_node=m_node.next;
            }
            film_data_node=film_data_node.next;
            //dlm.addElement(table_i.data.root.next.data + " index: " + idx_n.data);
        }

        jls.setModel(dlm);

    }

    // ! hangi film olduğunu kullanıcadan buluyor
    private ZeroList<Distance> fillFilm(MaxHeap2<Distance> user_reco, int k) {
        ZeroList<Distance> result = new ZeroList<>(); // ?index distance user_id star

        MaxHeap2<Distance> film_heap;
        Node<Distance> us_node = user_reco.heap.root; // ? vektör benzerlik
        Node<Integer> us_vector; //? 571 -> 3
        Node<Distance> heap_film_node;
        int index;

        for (int i = 0; i < user_reco.capacity; i++) {//? kullanıcıları geçiyoruz
            film_heap = new MaxHeap2<>(k);// inidex yıldız


            us_vector =us_node.data.vektor.root.next;//? kullanıcı vektörünün ilk yıldızı
            while(us_vector!=null){
                film_heap.insert(new Distance(us_vector.index,us_vector.data));
                us_vector=us_vector.next;
            }

            heap_film_node=film_heap.heap.root;
            for (int j = 0; j < k; j++) {
                result.insert(new Distance(heap_film_node.data.d_index, heap_film_node.data.distance, us_node.data.vektor.root.data));
                heap_film_node = heap_film_node.next;
            }
            us_node = us_node.next;
        }
        return result;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        FlatArcDarkOrangeIJTheme.setup();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JB_Get_Insert_Recommendation;
    private javax.swing.JButton JB_Get_Selected_Recommendation;
    private javax.swing.JComboBox<String> JCB_Fifth_Movie;
    private javax.swing.JComboBox<String> JCB_First_Movie;
    private javax.swing.JComboBox<String> JCB_Fourth_Movie;
    private javax.swing.JComboBox<String> JCB_Second_Movie;
    private javax.swing.JComboBox<String> JCB_Third_Movie;
    private javax.swing.JComboBox<String> JCB_User_Select;
    private javax.swing.JList<String> JLS_Insert_Result;
    private javax.swing.JList<String> JLS_Selected_Result;
    private javax.swing.JLabel JL_K;
    private javax.swing.JLabel JL_K1;
    private javax.swing.JLabel JL_X;
    private javax.swing.JLabel JL_X1;
    private javax.swing.JPanel JPN_TargetUser_Insert;
    private javax.swing.JPanel JPN_TargetUser_Selected;
    private javax.swing.JSpinner JSP_K_Insert_Value;
    private javax.swing.JSpinner JSP_K_Selected_Value;
    private javax.swing.JSpinner JSP_X_Insert_Value;
    private javax.swing.JSpinner JSP_X_Selected_Value;
    private javax.swing.JSpinner JS_1_MOVIE_VAL;
    private javax.swing.JSpinner JS_2_MOVIE_VAL;
    private javax.swing.JSpinner JS_3_MOVIE_VAL;
    private javax.swing.JSpinner JS_4_MOVIE_VAL;
    private javax.swing.JSpinner JS_5_MOVIE_VAL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
